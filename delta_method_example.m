
% We will use an example data set provided by the R base package datasets, 
% and consisting of the waiting time between eruptions and the duration of the eruption 
% for the Old Faithful geyser in Yellowstone National Park, Wyoming, USA. In this example, 
% x= duration of the eruption (minutes), and 
% y= waiting time between eruptions (minutes).
x = [3.6,1.8,3.333,2.283,4.533,2.883,4.7,3.6,1.95,4.35,1.833,3.917, ...
              4.2,1.75,4.7,2.167,1.75,4.8,1.6,4.25,1.8,1.75,3.45,3.067,4.533,3.6,1.967, ...
              4.083,3.85,4.433,4.3,4.467,3.367,4.033,3.833,2.017,1.867,4.833,1.833,4.783, ...
              4.35,1.883,4.567,1.75,4.533,3.317,3.833,2.1,4.633,2,4.8,4.716,1.833,4.833, ...
              1.733,4.883,3.717,1.667,4.567,4.317,2.233,4.5,1.75,4.8,1.817,4.4,4.167,4.7, ...
              2.067,4.7,4.033,1.967,4.5,4,1.983,5.067,2.017,4.567,3.883,3.6,4.133,4.333, ...
              4.1,2.633,4.067,4.933,3.95,4.517,2.167,4,2.2,4.333,1.867,4.817,1.833,4.3, ...
              4.667,3.75,1.867,4.9,2.483,4.367,2.1,4.5,4.05,1.867,4.7,1.783,4.85,3.683, ...
              4.733,2.3,4.9,4.417,1.7,4.633,2.317,4.6,1.817,4.417,2.617,4.067,4.25,1.967, ...
              4.6,3.767,1.917,4.5,2.267,4.65,1.867,4.167,2.8,4.333,1.833,4.383,1.883,4.933, ...
              2.033,3.733,4.233,2.233,4.533,4.817,4.333,1.983,4.633,2.017,5.1,1.8,5.033, ...
              4,2.4,4.6,3.567,4,4.5,4.083,1.8,3.967,2.2,4.15,2,3.833,3.5,4.583,2.367,5, ...
              1.933,4.617,1.917,2.083,4.583,3.333,4.167,4.333,4.5,2.417,4,4.167,1.883, ...
              4.583,4.25,3.767,2.033,4.433,4.083,1.833,4.417,2.183,4.8,1.833,4.8,4.1, ...
              3.966,4.233,3.5,4.366,2.25,4.667,2.1,4.35,4.133,1.867,4.6,1.783,4.367, ...
              3.85,1.933,4.5,2.383,4.7,1.867,3.833,3.417,4.233,2.4,4.8,2,4.15,1.867, ... 
              4.267,1.75,4.483,4,4.117,4.083,4.267,3.917,4.55,4.083,2.417,4.183,2.217, ...
              4.45,1.883,1.85,4.283,3.95,2.333,4.15,2.35,4.933,2.9,4.583,3.833,2.083, ... 
              4.367,2.133,4.35,2.2,4.45,3.567,4.5,4.15,3.817,3.917,4.45,2,4.283,4.767, ...
              4.533,1.85,4.25,1.983,2.25,4.75,4.117,2.15,4.417,1.817,4.467];
y = [79,54,74,62,85,55,88,85,51,85,54,84,78,47,83,52,62,84,52,79,51,47,78,69, ...
              74,83,55,76,78,79,73,77,66,80,74,52,48,80,59,90,80,58,84,58,73,83,64,53, ...
              82,59,75,90,54,80,54,83,71,64,77,81,59,84,48,82,60,92,78,78,65,73,82,56, ...
              79,71,62,76,60,78,76,83,75,82,70,65,73,88,76,80,48,86,60,90,50,78,63,72, ...
              84,75,51,82,62,88,49,83,81,47,84,52,86,81,75,59,89,79,59,81,50,85,59,87, ...
              53,69,77,56,88,81,45,82,55,90,45,83,56,89,46,82,51,86,53,79,81,60,82,77, ...
              76,59,80,49,96,53,77,77,65,81,71,70,81,93,53,89,45,86,58,78,66,76,63,88, ...
              52,93,49,57,77,68,81,81,73,50,85,74,55,77,83,83,51,78,84,46,83,55,81,57, ...
              76,84,77,81,87,77,51,78,60,82,91,53,78,46,77,84,49,83,71,80,49,75,64,76, ...
              53,94,55,76,50,82,54,75,78,79,78,78,70,79,70,54,86,50,90,54,54,77,79,64, ...
              75,47,86,63,85,82,57,82,67,74,54,83,73,73,88,80,71,83,56,79,78,84,58,83, ...
              43,60,75,81,46,90,46,74];
			  
% create a function for the nonlinear regression model equation
f = @(param,xval) (param(1)-param(4)) ./ (1+exp(-param(2) .* (xval-param(3))))+param(4);

% specify initial parameter values to use for the nonlinear regression optimization
p_init = [90 2 2 50];

% use nlinfit to find the optimum parameter values (popt) and covariance matrix (pcov)
[popt,resid,jacob,pcov] = nlinfit(x,y,f,p_init);
		  		  
% evenly spaced new observations that extend from below min(x) to above max(x)
x_new = linspace(1, 6, 100);

% probability level for the prediction limits (e.g. alpha=0.05 for 95% prediction limits and 95% confidence limits)
alpha=0.05;

% use the delta_method.m function to calculate confidence intervals and prediction intervals
d = delta_method(pcov,popt,x_new,f,x,y,alpha);

% use the parametric_bootstrap.m function to calculate confidence intervals and prediction intervals
trials = 10000; 	% number of iterations trials for Monte Carlo simulaton
b = parametric_bootstrap(popt,x_new,f,x,y,alpha,trials);

% use MATLAB's nlpredci to compare with delta method results
[y_new,dci_nlpredci] = nlpredci(f,x_new,popt,resid,'Covar',pcov,'Alpha',alpha);							% confidence interval
[y_new,dpi_nlpredci] = nlpredci(f,x_new,popt,resid,'Covar',pcov,'Alpha',alpha,'PredOpt','observation');	% prediction interval

% plot the results of the delta method compared with MATLAB's nlpredci
figure
hold on
plot(x,y,'.','markersize',10)
plot(d.x_new,d.y_new,'-','linewidth',2)
patch([d.x_new' fliplr(d.x_new')],[d.upr_pred' fliplr(d.lwr_pred')],[.8 .8 .8],'edgecolor','none','facealpha',0.5)
patch([d.x_new' fliplr(d.x_new')],[d.upr_conf' fliplr(d.lwr_conf')],[.6 .6 .6],'edgecolor','none','facealpha',0.5)
plot(x_new,y_new-dpi_nlpredci,'k--','linewidth',1)
plot(x_new,y_new+dpi_nlpredci,'k--','linewidth',1)
plot(x_new,y_new-dci_nlpredci,'k:','linewidth',1)
plot(x_new,y_new+dci_nlpredci,'k:','linewidth',1)
legend('observations','best-fit', ...
	'95% prediction interval (delta method)','95% confidence interval (delta method)', ...
	'95% prediction interval (nlpredci)','','95% confidence interval (nlpredci)', ...
	'location','southeast')
xlabel('x= eruption length (min)')
ylabel('y= waiting time (min)')
title('Delta-method results for confidence and prediction intervals')

% plot the results of the parametric bootstrap method compared with MATLAB's nlpredci
figure
hold on
plot(x,y,'.','markersize',10)
plot(b.x_new,b.y_new,'-','linewidth',2)
patch([b.x_new' fliplr(b.x_new')],[b.upr_pred' fliplr(b.lwr_pred')],[.8 .8 .8],'edgecolor','none','facealpha',0.5)
patch([b.x_new' fliplr(b.x_new')],[b.upr_conf' fliplr(b.lwr_conf')],[.6 .6 .6],'edgecolor','none','facealpha',0.5)
plot(x_new,y_new-dpi_nlpredci,'k--','linewidth',1)
plot(x_new,y_new+dpi_nlpredci,'k--','linewidth',1)
plot(x_new,y_new-dci_nlpredci,'k:','linewidth',1)
plot(x_new,y_new+dci_nlpredci,'k:','linewidth',1)
legend('observations','best-fit', ...
	'95% prediction interval (parametric bootstrap)','95% confidence interval (parametric bootstrap)', ...
	'95% prediction interval (nlpredci)','','95% confidence interval (nlpredci)', ...
	'location','southeast')
xlabel('x= eruption length (min)')
ylabel('y= waiting time (min)')
title('Parametric Bootstrap results for confidence and prediction intervals')

% print the confidence intervals of the model parameters from the parametric bootstrap
disp('Confidence intervals of parameters using parametric bootstrap');
disp(['Parameter beta_hat   ', num2str(100*(1-alpha)),'% confidence intervals']);
disp(sprintf('param1 \t  %.4f \t (%.4f - %.4f)', popt(1), b.popt_lwr_conf(1), b.popt_upr_conf(1)));
disp(sprintf('param2 \t  %.4f \t (%.4f - %.4f)', popt(2), b.popt_lwr_conf(2), b.popt_upr_conf(2)));
disp(sprintf('param3 \t  %.4f \t (%.4f - %.4f)', popt(3), b.popt_lwr_conf(3), b.popt_upr_conf(3)));
disp(sprintf('param4 \t  %.4f \t (%.4f - %.4f)', popt(4), b.popt_lwr_conf(4), b.popt_upr_conf(4)));
% Confidence intervals of parameters using parametric bootstrap
% Parameter beta_hat   95% confidence intervals
% param1 	  82.4659 	 (80.8025 - 85.2731)
% param2 	  2.2540 	 (1.4804 - 3.3995)
% param3 	  3.0553 	 (2.7808 - 3.2558)
% param4 	  51.3221 	 (44.9778 - 53.9696)



